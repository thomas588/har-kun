import streamlit as st
from datetime import datetime, timedelta

def app():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Yangiliklar (–ù–æ–≤–æ—Å—Ç–∏)"""
    st.write("### Yangiliklar - –ù–æ–≤–æ—Å—Ç–∏")
    
    # –§–∏–ª—å—Ç—Ä –Ω–æ–≤–æ—Å—Ç–µ–π
    category = st.selectbox("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", ["–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏", "–ú–∏—Ä", "–ë–∏–∑–Ω–µ—Å", "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–°–ø–æ—Ä—Ç", "–ö—É–ª—å—Ç—É—Ä–∞"])
    
    # –ü–æ–∏—Å–∫
    search = st.text_input("–ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ-–Ω–æ–≤–æ—Å—Ç–∏
    show_mock_news(category, search)

def show_mock_news(category, search):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ–º–æ-–Ω–æ–≤–æ—Å—Ç–∏"""
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–µ–π–∫–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
    news = [
        {
            "title": "–û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ—Ö–Ω–æ–ø–∞—Ä–∫–∞ –≤ –¢–∞—à–∫–µ–Ω—Ç–µ",
            "category": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "date": datetime.now() - timedelta(hours=2),
            "image": "tech_park.jpg",
            "summary": "–í –¢–∞—à–∫–µ–Ω—Ç–µ —Å–æ—Å—Ç–æ—è–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ—Ö–Ω–æ–ø–∞—Ä–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–Ω–µ—Ç —Ü–µ–Ω—Ç—Ä–æ–º –¥–ª—è IT-—Å—Ç–∞—Ä—Ç–∞–ø–æ–≤."
        },
        {
            "title": "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ä—É–º –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –ø–æ–¥–ø–∏—Å–∞–Ω–∏–µ–º –≤–∞–∂–Ω—ã—Ö —Å–æ–≥–ª–∞—à–µ–Ω–∏–π",
            "category": "–ë–∏–∑–Ω–µ—Å",
            "date": datetime.now() - timedelta(hours=5),
            "image": "economy.jpg",
            "summary": "–ù–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–º —Ñ–æ—Ä—É–º–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ —Å—É–º–º—É –±–æ–ª–µ–µ $500 –º–ª–Ω."
        },
        {
            "title": "–°–±–æ—Ä–Ω–∞—è –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä",
            "category": "–°–ø–æ—Ä—Ç",
            "date": datetime.now() - timedelta(hours=8),
            "image": "sport.jpg",
            "summary": "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–Ω–∞—è –æ–¥–µ—Ä–∂–∞–ª–∞ –ø–æ–±–µ–¥—É –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ç—É—Ä–Ω–∏—Ä–µ –ø–æ —Ñ—É—Ç–±–æ–ª—É."
        },
        {
            "title": "–í—ã—Å—Ç–∞–≤–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞ –æ—Ç–∫—Ä—ã–ª–∞—Å—å –≤ –º—É–∑–µ–µ",
            "category": "–ö—É–ª—å—Ç—É—Ä–∞",
            "date": datetime.now() - timedelta(days=1),
            "image": "art.jpg",
            "summary": "–í —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–º –º—É–∑–µ–µ –æ—Ç–∫—Ä—ã–ª–∞—Å—å –≤—ã—Å—Ç–∞–≤–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞ —Å —Ä–∞–±–æ—Ç–∞–º–∏ –º–µ—Å—Ç–Ω—ã—Ö —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤."
        },
        {
            "title": "–°–∞–º–º–∏—Ç G20 –æ–±—Å—É–¥–∏–ª –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –≤—ã–∑–æ–≤—ã",
            "category": "–ú–∏—Ä",
            "date": datetime.now() - timedelta(days=2),
            "image": "summit.jpg",
            "summary": "–õ–∏–¥–µ—Ä—ã —Å—Ç—Ä–∞–Ω G20 –æ–±—Å—É–¥–∏–ª–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≥–ª–æ–±–∞–ª—å–Ω–æ–π —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–ª–∏–º–∞—Ç–∞."
        },
    ]
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if category != "–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏":
        news = [n for n in news if n["category"] == category]
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–æ–∏—Å–∫—É
    if search:
        news = [n for n in news if search.lower() in n["title"].lower() or search.lower() in n["summary"].lower()]
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
    if not news:
        st.write("–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        for item in news:
            col1, col2 = st.columns([1, 3])
            
            with col1:
                st.write(f"üì∞")  # Placeholder –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            
            with col2:
                st.write(f"#### {item['title']}")
                st.write(f"{item['summary']}")
                st.write(f"_{item['category']} | {format_date(item['date'])}_")
            
            st.divider()

def format_date(date):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    now = datetime.now()
    
    if (now - date).days == 0:
        if (now - date).seconds < 3600:
            minutes = (now - date).seconds // 60
            return f"{minutes} –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥"
        else:
            hours = (now - date).seconds // 3600
            return f"{hours} —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥"
    elif (now - date).days == 1:
        return "–≤—á–µ—Ä–∞"
    else:
        return date.strftime("%d.%m.%Y")
