import streamlit as st
import os
import json
from datetime import datetime
from PIL import Image
import streamlit.components.v1 as components

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
APP_NAME = "Har Kun"
APPS = {
    "Tasbeeh": {"icon": "üìø", "category": "Religion", "path": "tasbeeh"},
    "Hisob": {"icon": "üßÆ", "category": "Finance", "path": "hisob"},
    "Ta'lim": {"icon": "üéì", "category": "Education", "path": "talim"},
    "Bozor": {"icon": "üõí", "category": "Shopping", "path": "bozor"},
    "Kutubxona": {"icon": "üìö", "category": "Education", "path": "kutubxona"},
    "Taomnoma": {"icon": "üç≤", "category": "Food", "path": "taomnoma"},
    "Intizom": {"icon": "üìã", "category": "Organization", "path": "intizom"},
    "Mashg'ulot": {"icon": "üèãÔ∏è", "category": "Health", "path": "mashgulot"},
    "Tabobat": {"icon": "üíä", "category": "Health", "path": "tabobat"},
    "Fayllar": {"icon": "üìÅ", "category": "Utility", "path": "fayllar"},
    "Transport": {"icon": "üöå", "category": "Travel", "path": "transport"},
    "Ob-havo": {"icon": "üå§Ô∏è", "category": "Weather", "path": "ob_havo"},
    "Yangiliklar": {"icon": "üì∞", "category": "News", "path": "yangiliklar"},
    "So'zma So'z": {"icon": "üí¨", "category": "Language", "path": "sozma_soz"},
    "Sayohat": {"icon": "üß≥", "category": "Travel", "path": "sayohat"}
}

def load_module(module_name):
    """–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        module_path = f"apps.{module_name}.app"
        module = __import__(module_path, fromlist=["app"])
        return module
    except ImportError as e:
        st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å {module_name}: {e}")
        return None

def save_session_data():
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)"""
    if "user_id" in st.session_state and "recent_apps" in st.session_state:
        # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ MongoDB
        pass

def load_session_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)"""
    # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ MongoDB
    if "user_id" not in st.session_state:
        st.session_state.user_id = "demo_user"
        
    if "recent_apps" not in st.session_state:
        st.session_state.recent_apps = []
        
    if "current_app" not in st.session_state:
        st.session_state.current_app = None
        
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã (—Å–≤–µ—Ç–ª–∞—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    if "theme" not in st.session_state:
        st.session_state.theme = "light"

def update_recent_apps(app_name):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–µ–¥–∞–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"""
    # –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ, —É–¥–∞–ª—è–µ–º –µ–≥–æ
    if app_name in st.session_state.recent_apps:
        st.session_state.recent_apps.remove(app_name)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
    st.session_state.recent_apps.insert(0, app_name)
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ 5 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    if len(st.session_state.recent_apps) > 5:
        st.session_state.recent_apps = st.session_state.recent_apps[:5]
    
    save_session_data()

def toggle_theme():
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –º–µ–∂–¥—É —Å–≤–µ—Ç–ª–æ–π –∏ —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π"""
    if st.session_state.theme == "light":
        st.session_state.theme = "dark"
    else:
        st.session_state.theme = "light"
    save_session_data()

def show_header():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —à–∞–ø–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # –ï—Å–ª–∏ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    if st.session_state.current_app:
        app_name = st.session_state.current_app
        app_info = APPS[app_name]
        
        col1, col2, col3 = st.columns([1, 6, 1])
        
        with col1:
            if st.button("‚Üê –ù–∞–∑–∞–¥"):
                st.session_state.current_app = None
                st.experimental_rerun()
                
        with col2:
            st.title(f"{APP_NAME} - {app_info['icon']} {app_name}")
            
        with col3:
            # –ò–∫–æ–Ω–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            with st.expander("üë§"):
                show_settings()
    else:
        # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        col1, col2 = st.columns([6, 1])
        with col1:
            st.title(f"{APP_NAME} üåü")
        with col2:
            # –ò–∫–æ–Ω–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            with st.expander("üë§"):
                show_settings()

    st.divider()

def show_settings():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    st.write("### –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã
    theme_label = "–¢–µ–º–Ω–∞—è —Ç–µ–º–∞" if st.session_state.theme == "light" else "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞"
    icon = "üåô" if st.session_state.theme == "light" else "‚òÄÔ∏è"
    
    if st.button(f"{icon} {theme_label}", key="theme_toggle"):
        toggle_theme()
        st.experimental_rerun()
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    st.write("#### –Ø–∑—ã–∫")
    language = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", ["–†—É—Å—Å–∫–∏–π", "–é–∑–±–µ–∫", "English"], index=0, key="language_select")
    
    st.write("#### –ê–∫–∫–∞—É–Ω—Ç")
    st.write(f"ID: {st.session_state.user_id}")
    
    if st.button("–í—ã–π—Ç–∏", key="logout_button"):
        # –õ–æ–≥–∏–∫–∞ –≤—ã—Ö–æ–¥–∞ (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
        st.info("–§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ")

def show_app_grid():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–µ—Ç–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"""
    app_list = list(APPS.keys())
    
    # –í—ã—á–∏—Å–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–æ–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —à–∏—Ä–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞
    # –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö - 3, –¥–ª—è –ø–ª–∞–Ω—à–µ—Ç–æ–≤ - 4, –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–æ–≤ - 5
    cols_per_row = 3
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –ø–æ cols_per_row –∫–æ–ª–æ–Ω–æ–∫
    rows = [app_list[i:i+cols_per_row] for i in range(0, len(app_list), cols_per_row)]
    
    for row in rows:
        cols = st.columns(cols_per_row)
        for i, app_name in enumerate(row):
            app_info = APPS[app_name]
            with cols[i]:
                if st.button(f"{app_info['icon']}\n{app_name}", key=f"app_{app_name}", use_container_width=True):
                    st.session_state.current_app = app_name
                    update_recent_apps(app_name)
                    st.experimental_rerun()

def show_recent_apps():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–µ–¥–∞–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"""
    st.write("#### –ù–µ–¥–∞–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ")
    
    recent_apps = st.session_state.recent_apps
    
    if not recent_apps:
        st.write("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–µ–¥–∞–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–µ–¥–∞–≤–Ω–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    cols = st.columns(len(recent_apps))
    
    for i, app_name in enumerate(recent_apps):
        app_info = APPS[app_name]
        with cols[i]:
            if st.button(f"{app_info['icon']}\n{app_name}", key=f"recent_{app_name}", use_container_width=True):
                st.session_state.current_app = app_name
                update_recent_apps(app_name)
                st.experimental_rerun()

def inject_theme_script():
    """–î–æ–±–∞–≤–ª—è–µ—Ç JavaScript –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–∞–º–∏"""
    theme = st.session_state.theme
    
    # JavaScript –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞—Ç—Ä–∏–±—É—Ç–∞ data-theme
    script = f"""
    <script>
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('DOMContentLoaded', (event) => {{
            document.body.setAttribute('data-theme', '{theme}');
            document.querySelector('.stApp').setAttribute('data-theme', '{theme}');
        }});
    </script>
    """
    
    # –í—Å—Ç–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç
    st.markdown(script, unsafe_allow_html=True)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    st.set_page_config(
        page_title=APP_NAME,
        page_icon="üåü",
        layout="wide"
    )
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
    load_session_data()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ç–∏–ª–∏
    with open("css/style.css", encoding="utf-8") as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)
    
    # –î–æ–±–∞–≤–ª—è–µ–º JavaScript –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–∞–º–∏
    inject_theme_script()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —à–∞–ø–∫—É
    show_header()
    
    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if st.session_state.current_app:
        app_name = st.session_state.current_app
        app_path = APPS[app_name]["path"]
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        module = load_module(app_path)
        
        if module and hasattr(module, "app"):
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            module.app()
        else:
            st.error(f"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {app_name} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    
    else:
        # –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
        # –°–Ω–∞—á–∞–ª–∞ —Å–µ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        show_app_grid()
        
        # –°–Ω–∏–∑—É - –Ω–µ–¥–∞–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        st.divider()
        show_recent_apps()

if __name__ == "__main__":
    main()
